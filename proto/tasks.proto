syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "github.com/ucok-man/gradded-challenge-2-p3-contract/pb";

message CreateTasksRequest {
  string title = 1;
  string description = 2;
  google.protobuf.Timestamp due_date = 3;
}

message CreateTasksResponse {
  int64 id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp due_date = 4;
  google.protobuf.Timestamp created_at = 5;
}

message GetAllTaskRequest {
  string title = 1;
  string description = 2;
  string sort = 3;
  string sort_column = 4;
  string sort_direction = 5;
  int64 limit = 6;
  int64 offset = 7;
  int64 page = 8;
  int64 page_size = 9;
}

message GetAllTaskResponse {
  message Tasks {
    int64 id = 1;
    int64 user_id = 2;
    string title = 3;
    string description = 4;
    google.protobuf.Timestamp due_date = 5;
    google.protobuf.Timestamp created_at = 6;
  }

  repeated Tasks tasks = 1;
  int64 total_record = 2;
}

message GetByIDRequest { int64 id = 1; }

message GetByIDResponse {
  int64 id = 1;
  int64 user_id = 2;
  string title = 3;
  string description = 4;
  google.protobuf.Timestamp due_date = 5;
  google.protobuf.Timestamp created_at = 6;
}

message UpdateTaskRequest {
  int64 id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp due_date = 4;
}

message UpdateTaskResponse {
  int64 id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp due_date = 4;
  google.protobuf.Timestamp created_at = 5;
}

message DeleteTaskRequest { int64 id = 1; }

message DeleteTaskResponse {
  int64 id = 1;
  string title = 2;
  string description = 3;
  google.protobuf.Timestamp due_date = 4;
  google.protobuf.Timestamp created_at = 5;
}

service TasksService {
  rpc Create(CreateTasksRequest) returns (CreateTasksResponse) {};
  rpc GetAll(GetAllTaskRequest) returns (GetAllTaskResponse) {};
  rpc GetByID(GetByIDRequest) returns (GetByIDResponse) {}
  rpc Update(UpdateTaskRequest) returns (UpdateTaskResponse) {};
  rpc Delete(DeleteTaskRequest) returns (DeleteTaskResponse) {};
}